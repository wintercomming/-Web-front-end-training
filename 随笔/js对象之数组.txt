array数组
数组的栈方法
1.push（）：把括号中的参数顺序的添加到数组的最后；
返回值为添加后数组的长度
例如：
var colors = new Array（"red","green","blue"）
var len = colors.push("yellow","black")
console.log(len)
最后输出len为5
2.unshift（）：把参数添加到数组的最前面，跟push略有不同，
是从右往左加在最前面的

3.pop（）删除最后面的
4.shift（）删除最前面的




数组转换方法

join
语法arrayObject.join(separator)：separator可以用“字符”替代让字符串中的数与数之间用那个自定的字符隔开
把数组转化为字符串
返回结果为string


数组重排序
reverse（）
语法：stringObject.reverse()
用于颠倒数组中元素顺序，意思是第一个变成最后一个，其他的跟着变
一般来说反转数组后面要跟着.join，使数组变为字符串

数组排序
sort（）
语法：arrayObject.sort()
如正常使用，以为sort是根据字符串大小排序，所以比较数字大小的时候，sort是判断数字第一个字符的大小进行排序
例如：
11.23.9.88.6
经sort排序后，变成11.23.6.88.9；
这时候就需要在括号里面加上匿名函数来进行大小的比较；
如：
降序：arr.sort(function(a,b){return b-a})
升序：arr.sort（function（a,b）{return a-b}）


数组的操作方法：
concat（）：用于连接两个或者多个数组
语法array.Object.concat(array1,array2,array3......)




slice（）:截取数组
arrayObject.slice(start,end)
当start为负数时，start等于长度加上那个负数





splice（）方法：功能最强大
删除：
arrayObject.splice（index，count）
index为索引，count为值
指的是从index处删除count个

插入：
arrayObject.splice（index，0，item1,...,itemx）
index:起始位置
0:要删除的项数
item1....itemx：要插入的项


替换：
把上面的0换成要替换的个数。




查找
indexof（）
arrayObject.indexof(searchvaule，startindex)
功能：
从数组的开头开始查找
searchvaule要查找的项
startindex，起点位置（可不填）
返回值
number（即位置在哪个地方），没有找到则返回-1；


lastindexof（）与上相反

数组的位置方法是es5新增的，所以ie9之前的浏览器不支持

